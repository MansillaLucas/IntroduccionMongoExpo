use("Revistero")

db.inventory.drop()

db.inventory.insertMany([
  { _id: 1, item: { name: "ab", code: "123" }, qty: 15, tags: ["A", "B", "C"] },
  { _id: 2, item: { name: "cd", code: "123" }, qty: 20, tags: ["B"] },
  { _id: 3, item: { name: "ij", code: "456" }, qty: 25, tags: ["A", "B"] },
  { _id: 4, item: { name: "xy", code: "456" }, qty: 30, tags: ["B", "A"] },
  { _id: 5, item: { name: "mn", code: "000" }, qty: 20, tags: [["A", "B"], "C"] },
])

// El comando $gt permite encontrar los valores que sean mas grandes que el numero especificado
db.inventory.find({qty: {$gt:20}})

// El comando $gte permite encontrar los valores que sean mas grandes o iguales que el numero especificado
db.inventory.find({qty: {$gte:20}})

// El comando $lt permite encontrar los valores que sean mas chicos que el numero especificado
db.inventory.find({qty: {$lt:20}})

// El comando $lte permite encontrar los valores que sean mas chicos que el numero especificado
db.inventory.find({qty: {$lte:20}})

// Se pueden combinar mas de una condición para especificar un rango de busqueda/filtro
db.inventory.find({qty: {$gte:20, $lt:60}})

// Además de esto, se puede hacer una busqueda entre los elementos dentro de un objeto de la siguiente forma
db.inventory.find({
    "item.code": "456",
    qty: {$gte:20, $lt:30}
})

// --------------------------------------

db.articulos.drop()

db.articulos.insertMany([
  { _id: 1, sensor: "A001", date: "2022-01-01", readings: [1,2,3,4] },
  { _id: 2, sensor: "A001", date: "2022-01-02", readings: [1,2,3,4] },
  { _id: 3, sensor: "A002", date: "2022-01-01", readings: [1,2,3,4] },
  { _id: 4, sensor: "A002", date: "2022-01-02", readings: [1,2,3,4] },
])

// Estas condiciones podrán afectar los elementos dentro de un arreglo también,
// modificando solo las necesarias que cumplan con la función
db.articulos.updateOne(
    { sensor: "A001"},
    {
        $pull: {
            readings: {$gte: 3}
        }
    }
)